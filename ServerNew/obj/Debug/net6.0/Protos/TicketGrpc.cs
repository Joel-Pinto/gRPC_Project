// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Ticket.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ServerNew {
  public static partial class SendTicket
  {
    static readonly string __ServiceName = "SendTicket";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ServerNew.TicketRequest> __Marshaller_TicketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServerNew.TicketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ServerNew.TicketReply> __Marshaller_TicketReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServerNew.TicketReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ServerNew.BuyTicketRequest> __Marshaller_BuyTicketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServerNew.BuyTicketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ServerNew.BuyTicketReply> __Marshaller_BuyTicketReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServerNew.BuyTicketReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ServerNew.LoadTicketsRequest> __Marshaller_LoadTicketsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServerNew.LoadTicketsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ServerNew.LoadTicketsReply> __Marshaller_LoadTicketsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServerNew.LoadTicketsReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ServerNew.TicketRequest, global::ServerNew.TicketReply> __Method_GetTicketInfo = new grpc::Method<global::ServerNew.TicketRequest, global::ServerNew.TicketReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTicketInfo",
        __Marshaller_TicketRequest,
        __Marshaller_TicketReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ServerNew.BuyTicketRequest, global::ServerNew.BuyTicketReply> __Method_BuyTicket = new grpc::Method<global::ServerNew.BuyTicketRequest, global::ServerNew.BuyTicketReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BuyTicket",
        __Marshaller_BuyTicketRequest,
        __Marshaller_BuyTicketReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ServerNew.LoadTicketsRequest, global::ServerNew.LoadTicketsReply> __Method_LoadTickets = new grpc::Method<global::ServerNew.LoadTicketsRequest, global::ServerNew.LoadTicketsReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "LoadTickets",
        __Marshaller_LoadTicketsRequest,
        __Marshaller_LoadTicketsReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ServerNew.TicketReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SendTicket</summary>
    [grpc::BindServiceMethod(typeof(SendTicket), "BindService")]
    public abstract partial class SendTicketBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ServerNew.TicketReply> GetTicketInfo(global::ServerNew.TicketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ServerNew.BuyTicketReply> BuyTicket(global::ServerNew.BuyTicketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task LoadTickets(global::ServerNew.LoadTicketsRequest request, grpc::IServerStreamWriter<global::ServerNew.LoadTicketsReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SendTicketBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetTicketInfo, serviceImpl.GetTicketInfo)
          .AddMethod(__Method_BuyTicket, serviceImpl.BuyTicket)
          .AddMethod(__Method_LoadTickets, serviceImpl.LoadTickets).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SendTicketBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetTicketInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServerNew.TicketRequest, global::ServerNew.TicketReply>(serviceImpl.GetTicketInfo));
      serviceBinder.AddMethod(__Method_BuyTicket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServerNew.BuyTicketRequest, global::ServerNew.BuyTicketReply>(serviceImpl.BuyTicket));
      serviceBinder.AddMethod(__Method_LoadTickets, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::ServerNew.LoadTicketsRequest, global::ServerNew.LoadTicketsReply>(serviceImpl.LoadTickets));
    }

  }
}
#endregion
